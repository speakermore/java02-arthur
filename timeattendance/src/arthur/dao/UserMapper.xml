<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="arthur.dao.UserMapper">
	<resultMap type="Student" id="stu">
		<id column="id" property="id" />
		<result column="studentName" property="studentName" />
		<result column="studentPwd" property="studentPwd" />
		<result column="studentNo" property="studentNo" />
		<result column="studentSex" property="studentSex" />
		<result column="classId" property="classId" />
		<result column="className" property="className" />
		<result column="integralNum" property="integralNum" />
		<result column="fabulousNum" property="fabulousNum" />
	</resultMap>
	<select id="sLogin" resultType="Student">
		select * from student where
		studentName=#{name}
	</select>
	<select id="tLogin" resultType="Teacher">
		select * from teacher where
		teacherName=#{name}
	</select>
	<update id="updatePwd" parameterType="Student">
		update student set
		studentPwd=#{stuPwd1} where id=#{id}
	</update>
	<insert id="addStudent" parameterType="Student">
		insert into
		student(studentName,studentPwd,studentNo,studentSex,classId)
		values(#{studentName},#{studentPwd},#{studentNo},#{studentSex},#{classId})
	</insert>
	<select id="findByStudentId" resultMap="stu">
		select
		s.studentName,s.studentSex,c.className,s.studentNo,i.integralNum,f.fabulousNum
		from student s inner join fabulous f on s.id=f.studentId inner
		join
		integral i on s.id=i.studentId
		inner join stuclass c on s.classId=c.id
		where s.id=#{studentId}
	</select>
</mapper>